# 图片懒加载
## 浏览器会做什么
    - 浏览器负责渲染页面的时候做了：
        基于http 协议下载html标签和css样式表
        在内存中建立DOM树和渲染树
    - html 标签 -> 生成DOM树（树状结构）
    - css 标签 —> 生成渲染树
    - DOM树＋CSS渲染树 =页面

    - JS是单线程 而浏览器是多线程
    - img 和link script 一样  浏览器会启动新的下载线程
    - 当有很多线程并发时  会发生阻塞 （高速堵车）
    -那么 有必要同时并发这么多吗?  NO
## 性能优化
    - 加载首屏的图片（视窗）
    - 滚动懒加载
    - 前端的天职就是尽快显示页面 

## 步骤
    - 手动控制图片加载
        img src="" src是标签属性 浏览器会立马下载  无法停止
    - data-src 是数据属性 格式 data-... 
        dataset     一个元素可以有多个数据属性 

        当滚动到一定位置时，加载该位置的图片或数据

## 收获 
    - 前端性能主题之懒加载
    - 浏览器的底层原理 下载线程
        要并发 以达到快速显示
        但是也有一定限制，不然会阻塞 底层有tcp/ip通道
    - ClientHeight 屏幕高度 scrollTop 滚动偏移量（ 距离顶部） offsetTop 距离顶部高度
    - dataset 的使用 
    - 业务逻辑优化 加载了就没必要在加载 移除事件
    - 那么如何减少scroll的触发次数呢
    - scroll 太敏感了  